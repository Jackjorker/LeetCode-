
/*

为了不在赎金信中暴露字迹，从杂志上搜索各个需要的字母，组成单词来表达意思。

给你一个赎金信 (ransomNote) 字符串和一个杂志(magazine)字符串，判断 ransomNote 能不能由 magazines 里面的字符构成。

如果可以构成，返回 true ；否则返回 false 。

magazine 中的每个字符只能在 ransomNote 中使用一次。

?

示例 1：

输入：ransomNote = "a", magazine = "b"
输出：false
示例 2：

输入：ransomNote = "aa", magazine = "ab"
输出：false
示例 3：

输入：ransomNote = "aa", magazine = "aab"
输出：true






*/



class Solution {
public:
    bool canConstruct(string ransomNote, string magazine) {
        //如果字符串magzine的长度小于ransomNote的长度，不符合要求，return false
        if(magazine.size() < ransomNote.size()){
            return false;

        }
        //定义一个接受26个字母的整数型容器cnt
        vector<int> cnt(26);
        //将magzine字符串的字符一一接入cnt之中
        for(auto &i : magazine){
            cnt[i - 'a']++;
        }
        //按照ransomNote一个一个减去magzine的字符，如果出现magzine某一字符不够减的情况，返回false
        for(auto & i : ransomNote){
            cnt[i - 'a']--;
            if(cnt[i -  'a'] < 0)
            return false;
        }
        //否则返回true
        return true;
    }
};